<div id="results" hidden>
	<a class="button hidden" href="#error" id="clickSystemError"></a>
	<form id="step1">
		<h5>ENTER YOUR EMAIL</h5>
		<p><small>Please verify your identity to continue.</small></p>
		<div class="row">
			<div class="eight columns">
				<input class="u-full-width" type="email" placeholder="me@mailbox.com" id="getEmail" value="aug2uag@gmail.com">
			</div>
			<div class="four columns">
				<a class="button button-primary" href="javascript:void(0)" onclick="getEmail()">Ok</a>
			</div>
		</div>
	</form>
	<form id="step2" hidden>
		<h5>VERIFY PIN</h5>
		<p><small>An email was sent to you that has the PIN.</small></p>
		<div class="row">
			<div class="digits__container">
				<p>Enter your pin below</p>
				<div class="digits">
					<input type="text" class="digipin" id="digit-1" tabindex="1" data-id="1" />
					<input type="text" class="digipin" id="digit-2" tabindex="2" data-id="2" />
					<input type="text" class="digipin" id="digit-3" tabindex="3" data-id="3" />
					<input type="text" class="digipin" id="digit-4" tabindex="4" data-id="4" />
				</div>
			</div>
		</div>
	</form>
	<form id="step3" hidden>
		<h5>SELECT OPTION</h5>
		<p><small>Choose your deployment option. Cancel anytime.</small> <a href="#options"><i class="dark-text fa fa-question-circle"></i></a></p>
		<div class="row" id="accountType" hidden>
			<div class="one columns">
				<p>&nbsp;</p>
			</div>
			<div class="ten columns">
				<label for="userType"><small>What kind of entity are you?</small></label>
				<select class="u-full-width" id="userType">
			        <option value="">Your account type</option>
			        <option value="basic">Personal or small business</option>
			        <option value="extended">Business with > 10 employees</option>
				</select>
			</div>
		</div>
		<div class="row">
			<div class="one columns">
				<p>&nbsp;</p>
			</div>
			<div class="ten columns">
				<a class="button button-primary u-full-width" href="javascript:void(0)" onclick="deploy()">DEPLOY NOW, CANCEL ANYTIME</a>
			</div>
		</div>
		<div class="row">
			<div class="one columns">
				<p>&nbsp;</p>
			</div>
			<div class="ten columns">
				<a class="button button-primary u-full-width" href="javascript:void(0)" onclick="sourceOnly()">SOURCE CODE ONLY, NO DEPLOYMENT</a>
			</div>
		</div>
		<div class="row">
			<div class="one columns">
				<p>&nbsp;</p>
			</div>
			<div class="ten columns">
				<a class="button u-full-width" href="#deployments">ABOUT DEPLOYMENTS</a>
			</div>
		</div>
	</form>
	<div id="error" class="overlay">
		<div class="popup">
			<h2>Sorry!</h2>
			<a class="close" href="#">&times;</a>
			<div class="content">
				<span id="errorMessage"></span>
			</div>
		</div>
	</div>
	<div id="deployments" class="overlay">
		<div class="popup">
			<h2>Deployments</h2>
			<a class="close" href="#">&times;</a>
			<div class="content">
				The Facebook Messenger application needs to be hosted on a secure HTTPS connection to communicate with Facebook's API and end users. This requires migration of the source code, configuration, networking, and securing operations on server(s). In case you do not have access to these, we suggest you save time and money, and deploy with us!
			</div>
		</div>
	</div>
	<div id="options" class="overlay">
		<div class="popup">
			<h2>Options</h2>
			<a class="close" href="#">&times;</a>
			<div class="content">
				Select the deployment option to get your Messenger application to a live HTTPS destination. Individuals and small businesses with ten or fewer employees will be charged $15/mo. and businesses with more than ten employees will be charged $30/mo. There is no fee associated with the non-deployment option.
			</div>
		</div>
	</div>
	<script type="text/javascript">
		let o = {}
		let checkout = {}
		let deployments = []
		let repos = []
		let defaultError = 'There was an error on our end, please try again at a later time.'
		function getEmail() {
			o.email = $('#getEmail').val()
			$('#getEmail').val('')
			makeRequestWithHeaders('/email', o, function(response) {
				try {
					if (response.status===200) {
						$('#step1').hide()
						$('#step2').show()
					} else {
						let message = response.message ? response.message : defaultError
						$('#errorMessage').text(message)
						$('#clickSystemError').click()
					}
				} catch(e) {
					$('#errorMessage').text(defaultError)
					$('#clickSystemError').click()
				}
			})
		}

		function verifyPIN() {
			let d1 = $('#digit-1').val()
			$('#digit-1').val('')
			let d2 = $('#digit-2').val()
			$('#digit-2').val('')
			let d3 = $('#digit-3').val()
			$('#digit-3').val('')
			let d4 = $('#digit-4').val()
			$('#digit-4').val('')
			o.pin = d1 + d2 + d3 + d4
			makeRequestWithHeaders('/verify', o, function(response) {
				try {
					if (response.status===200) {
						setToken(response.token)
						deployments = response.deployments
						repos = response.repos
						$('#step2').hide()
						$('#step3').show()
						if (!response.type) {
							$('#accountType').show()
						}
					} else {
						let message = response.message ? response.message : defaultError
						$('#errorMessage').text(message)
						$('#clickSystemError').click()
					}
				} catch(e) {
					$('#errorMessage').text(defaultError)
					$('#clickSystemError').click()
				}
			})
		}

		function deploy() {
			// collect payment information, and create subscription
			// build chatbot from window.finalJSON
			// deploy chatbot
			// display list of chatbots deployed + metrics
			o.type = $('#userType').val()
			// get session token and create session
			makeRequestWithHeaders('/api/checkout', o, function(response) {
				console.log(response)
			})

		}

		function sourceOnly() {
			// send data structure (window.finalJSON)
			// build chatbot, client downloads or notifies user
			// display list of chatbots available to view / download source code
			var zip_file_path = "" //put inside "" your path with file.zip
			var zip_file_name = "" //put inside "" file name or something
			var a = document.createElement("a");
			document.body.appendChild(a);
			a.style = "display: none";
			a.href = zip_file_path;
			a.download = zip_file_name;
			a.click();
			document.body.removeChild(a);
		}

		function setOnscreenJSON() {
			$('#json').text(JSON.stringify(window.finalJSON, null, 4))
		}

		function downloadMessengerJSON(){
			var data = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(window.finalJSON, null, 4))
			var downloadAnchorNode = document.createElement('a')
			downloadAnchorNode.setAttribute('href', data)
			downloadAnchorNode.setAttribute('download', 'messenger.json')
			document.body.appendChild(downloadAnchorNode)
			downloadAnchorNode.click()
			downloadAnchorNode.remove()
		}
	</script>

</div>